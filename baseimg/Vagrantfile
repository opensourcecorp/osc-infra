# baseimg's VM by itself isn't really anything special, but you can use this
# Vagrantfile to try out ad-hoc VM stuff for potential net-new platforms

# For root Vagrantfile to keep paths consistent; use in place of '.' in paths
here = File.dirname(__FILE__)

Vagrant.configure("2") do |config|
  box = "baseimg"

  cpus   = 1
  memory = 1024

  username = "packer"
  password = "packer"

  config.ssh.username = username
  config.ssh.password = password

  config.vm.provider "libvirt" do |lv|
    lv.cpus   = cpus
    lv.memory = memory
  end

  config.vm.provider "virtualbox" do |vb|
    vb.cpus   = cpus
    vb.memory = memory
  end
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  config.vm.define "baseimg" do |baseimg|
    baseimg.vm.box = box
    baseimg.vm.synced_folder "#{here}", "/vagrant" # , disabled: true
    baseimg.vm.network "private_network", ip: "10.0.1.#{rand(20..254)}" # type: "dhcp", name: "vboxnet0"
    baseimg.vm.network "forwarded_port", guest: 80, host: 8080
    baseimg.vm.provision "file", source: "scripts", destination: "scripts"
    baseimg.vm.provision "shell",
      inline: <<-SCRIPT
        export app_name=baseimg
        export configmgmt_address=127.0.0.1
        # bash scripts/build/main.sh
        # bash scripts/run/main.sh
      SCRIPT
  end

end
