# For root Vagrantfile to keep paths consistent; use in place of '.' in paths
here = File.dirname(__FILE__)

Vagrant.configure("2") do |config|
  box = "cicd"

  num_controllers = 1
  num_agents      = 0

  username = "packer"
  password = "packer"

  config.ssh.username = username
  config.ssh.password = password

  config.vm.provider "virtualbox" do |vb|
    vb.cpus = 1
    vb.memory = 1024
    # vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
    # much faster startups of subsequent identical base VMs, but leaves the base VM in VBox's storage after destroy op
    # vb.linked_clone = true
  end

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # Numbered according to their last IP int
  (1..num_controllers).each do |i|
    config.vm.define "cicd-controller-#{i}" do |cfg|
      cfg.vm.box = box
      cfg.vm.network "private_network", ip: "10.0.1.#{rand(20..254)}" # type: "dhcp", name: "vboxnet0"
      cfg.vm.network "forwarded_port", guest: 8080, host: (8080 + i - 1)
      cfg.vm.synced_folder "#{here}", "/vagrant", disabled: true
      cfg.vm.provision "shell",
        inline: <<-SCRIPT
          export app_name='cicd-controller'
          export configmgmt_address='configmgmt.service.consul'
          bash /usr/local/imgbuilder/scripts/run/main.sh
        SCRIPT
    end
  end

  # Numbered according to their last IP int
  (1..num_agents).each do |i|
    config.vm.define "cicd-agent-#{i}" do |cfg|
      cfg.vm.box = box
      cfg.vm.network "private_network", ip: "10.0.1.#{rand(20..254)}" # type: "dhcp", name: "vboxnet0"
      cfg.vm.synced_folder "#{here}", "/vagrant", disabled: true
      cfg.vm.provision "shell",
        inline: <<-SCRIPT
          export app_name='cicd-agent'
          export configmgmt_address='configmgmt.service.consul'
          bash /usr/local/imgbuilder/scripts/run/main.sh
        SCRIPT
    end
  end
end
