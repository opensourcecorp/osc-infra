# This and the associated Packer config taken & modified from:
# https://github.com/deimosfr/packer-debian

# Some core stuff you & d-i need anyway
choose-mirror-bin mirror/http/proxy string
d-i apt-setup/use_mirror boolean true
d-i base-installer/kernel/override-image string linux-server
d-i clock-setup/utc boolean true
d-i clock-setup/utc-auto boolean true
d-i finish-install/reboot_in_progress note
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string /dev/sda
d-i keymap select us
d-i mirror/country string manual
d-i mirror/http/directory string /debian
d-i mirror/http/hostname string http.debian.net
d-i mirror/http/proxy string

# # Partition disk(s); the following 7 lines perform a zero-frills MBT
# # partitioning scheme. I read through the Partitioning section of the
# # following first: https://www.debian.org/releases/stable/amd64/apbs04.en.html
# d-i partman-auto/init_automatically_partition select biggest_free
# d-i partman-auto/method string regular
# d-i partman-auto/choose_recipe select atomic
# d-i partman-partitioning/confirm_write_new_label boolean true
# d-i partman/choose_partition select finish
# d-i partman/confirm boolean true
# d-i partman/confirm_nooverwrite boolean true

# And this example is an equally-zero-frills EFI install, but partman-auto
# doesn't have any shorthands for EFI boot, so need to use the full partitioning
# syntax in a recipe. In addition to the official Debian link in the comment
# above, I found this helpful doc page on Github for this part:
# https://github.com/xobs/debian-installer/blob/master/doc/devel/partman-auto-recipe.txt
d-i partman-auto/init_automatically_partition select biggest_free
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select efi-scheme
d-i partman-auto/expert_recipe string \
  efi-scheme :: \
    256 10 256 fat32 \
      $primary{ } \
      method{ efi } format{ } \
    . \
    500 10000 -1 ext4 \
      method{ format } format{ } \
      use_filesystem{ } filesystem{ ext4 } \
      mountpoint{ / } \
    . \
    64 512 100% linux-swap \
      method{ swap } format{ } \
    .
d-i partman/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Auth
d-i passwd/root-login boolean false
d-i passwd/root-password-again password packer
d-i passwd/root-password password packer
d-i passwd/user-fullname string packer
d-i passwd/user-uid string 900
d-i passwd/user-password password packer
d-i passwd/user-password-again password packer
d-i passwd/username string packer

# Pre-install some packages
d-i pkgsel/include string \
  curl \
  gnupg2 \
  openssh-server \
  linux-headers-generic \
  sudo

# Everything else...?
d-i pkgsel/install-language-support boolean false
d-i pkgsel/update-policy select unattended-upgrades
d-i pkgsel/upgrade select full-upgrade
# Prevent packaged version of VirtualBox Guest Additions being installed:
d-i preseed/early_command string sed -i \
  '/in-target/idiscover(){/sbin/discover|grep -v VirtualBox;}' \
  /usr/lib/pre-pkgsel.d/20install-hwpackages
d-i time/zone string UTC
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false
# Need to set DHCP to MAC-based instead of IP, so Packer can still reach it if
# the IP changes
# d-i preseed/late_command string \ sed -i -E 's/^#*(send dhcp-client-identifier).*$/\1 = hardware;/' /target/etc/dhcp/dhclient.conf
d-i preseed/late_command string sed -i '/^deb cdrom:/s/^/#/' /target/etc/apt/sources.list
apt-cdrom-setup apt-setup/cdrom/set-first boolean false
apt-mirror-setup apt-setup/use_mirror boolean true
popularity-contest popularity-contest/participate boolean false
tasksel tasksel/first multiselect standard, ubuntu-server
