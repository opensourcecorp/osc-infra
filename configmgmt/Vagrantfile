# This Vagrantfile is used to stand up a local configmgmt master, for the purpose of
# debugging the image build, but more importantly to provide a master node for
# other local image builds to use for their configuration.

# For root Vagrantfile to keep paths consistent; use in place of '.' in paths
here = File.dirname(__FILE__)

Vagrant.configure("2") do |config|
  box = "baseimg"
  username = "packer"
  password = "packer"

  num_masters = 1

  config.ssh.username = username
  config.ssh.password = password

  config.vm.provider "virtualbox" do |vb|
    vb.cpus   = 1
    vb.memory = 1024
  end

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  config.vm.define "configmgmt" do |cfg|
    cfg.vm.box = box
    cfg.vm.network "private_network", ip: "10.0.1.10" # needs to be static
    cfg.vm.network "forwarded_port", guest: 4505, host: 4505
    cfg.vm.network "forwarded_port", guest: 4506, host: 4506
    cfg.vm.synced_folder "#{here}", "/vagrant", disabled: true
    cfg.vm.synced_folder "#{here}/salt/salt/", "/srv/salt"
    cfg.vm.synced_folder "#{here}/salt/pillar/", "/srv/pillar"

    # This script is already on the disk, but this lets us update it with local changes without rebuilding the entire image
    cfg.vm.provision "file", source: "#{here}/../baseimg/scripts/run/main.sh", destination: "/tmp/main.sh"
    cfg.vm.provision "shell", inline: "sudo cp /tmp/main.sh /usr/local/baseimg/scripts/run/main.sh"
    cfg.vm.provision "shell",
      inline: <<-SCRIPT
        export app_name='configmgmt'
        export configmgmt_address='127.0.0.1'
        bash /usr/local/baseimg/scripts/run/main.sh
      SCRIPT
  end
end
